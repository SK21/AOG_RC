<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="butClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>