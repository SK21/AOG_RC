<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnRescan.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxEAAAsRAX9kX5EAAAAbdEVYdFNvZnR3YXJlAFBob3RvRGVtb24gMjAyNC4xMuvg
        8V8AAAPzSURBVHhe7drZyxVlAMfx1wRNS00FSbEkNVAquxEL9T/o1iyF8sYdBLeuWrQ7saT7KAq8cCH0
        1isvIqmEyGgR1HIpFDWXMMsWsu9X3oGH4fGcM3PmzDjO/OAD5z1nluc875ln5lmG2rRp06ZNmzZlZxQm
        YBImDr/2vfs2z2A13senOInLuDrM177nZ27jtu5T68zCm/ga/+F2Ru5zDG/BY9UmT+Ej3ETsi+XxBz7G
        0yglXpPKknHYiT8R+xJpt3BjmK9j26S53TvwXAPLqziPC1jhGz1kIb5HrND6F0fxHpbjefiznjbM177n
        Z27zJdwndiz9gMUoPA/hVyQnsoF6GJ1ig/UXwgImzmI75iJr3GcbPEbs2H9jDQqNt6XrSE7yGybjbrGB
        CguVsFXfiqyXUSweYwsuIXYuK6mweE++guTg/gKslFi83sOCJPbhMRSd6diL2Dn9lRWSXipgBD5AWICE
        //VBZzNi5/ZS7DvdKuBBHER4YtlgvYSyshTpRtK/bUj7SqwCkjbAzw4jPKl+xwsoOy8iXRafJrs12h2T
        roBrMFPxFcKT6SK8BVaVTUiXaRdyJ10Bv+A5HA/eS/yE0p7MOuQThOX6B3luu3eSrgB/3t4KwxPoG8zA
        vZAp8LYblm8PciVdATGH4APTvZSNCMvog1muDlS3Cvgcs2Gte68PDfT5vEvG4BzCsr6NzOlWAd4VZE8v
        7Wf02ncYRN5AWFb7Jg8gU7zlxa75XrlvVb8Ef5n2D5KyOJ7wLDLFe2i3NqAT+xFVXgpfICzPemTOK7AH
        lvzce+U1aFe6yuxAWAEOzOTKWPgInIX7VB0fkcMKOIJGZT7CCvgRo9GYPIFweM3BHe9sjYljBj69JhVg
        X6bTgM59l8ZXQOMvgcY3go5KhRXQuNtgeqA294NQXVPIo3BdY/8/nKCxM1T7GeYsSU/SfIeRaETshzge
        EVZAYZMldUhsSGwmGpFHEU7oajcakwMIv7yjQnPQiMTmCV1AUWoeQRWDIbGpsRModch+A5weO4MlvlFS
        HPlxBij88v7d9+RoljyOsAByIcOg4znS59VKlJpYBWhQCyQ85n7Ezvk6KslriBXI5Sz+p8aj33gMG7u7
        LZFxQqTSrEI4IRGybXANT57bkvu472nEju05C1kVUkQW4VvECiobKHtq7+JlLICjNw5hyddOwy+D8/tu
        m27kQj7nD2SZXD9xVinLQkm3c/xOWRZXep/vaxXIoOOiCZe1urw19iXysIIc3KhV99bJSq9hF1PEvlQv
        3Nde3ZOodeZhLT7EZzgFJ2GTeUU7M77nZ26zDplndusUR2odrk7mFX3dqNHbNm3atGnTpvIMDf0PCwlA
        abvpfFwAAAAASUVORK5CYII=
</value>
  </data>
</root>